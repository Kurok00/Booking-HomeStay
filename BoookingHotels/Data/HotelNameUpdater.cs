using Microsoft.EntityFrameworkCore;

namespace BoookingHotels.Data
{
    public static class HotelNameUpdater
    {
        public static async Task UpdateHotelNamesAsync(ApplicationDbContext context)
        {
            try
            {
                // L·∫•y danh s√°ch hotels hi·ªán t·∫°i
                var hotels = await context.Hotels.ToListAsync();
                
                if (!hotels.Any())
                {
                    Console.WriteLine("‚ùå Kh√¥ng c√≥ hotel n√†o trong database!");
                    return;
                }

                Console.WriteLine($"üîÑ ƒêang c·∫≠p nh·∫≠t t√™n cho {hotels.Count} kh√°ch s·∫°n...");

                // Danh s√°ch t√™n kh√°ch s·∫°n th·ª±c t·∫ø theo t·ª´ng th√†nh ph·ªë
                var hotelNames = new Dictionary<string, List<string>>
                {
                    ["ƒê√† L·∫°t"] = new List<string>
                    {
                        "Dalat Palace Heritage Hotel",
                        "Ana Mandara Villas Dalat Resort & Spa", 
                        "Swiss-Belresort Tuyen Lam Dalat",
                        "TTC Hotel Premium Dalat",
                        "Sammy Dalat Hotel",
                        "Dalat Wonder Resort",
                        "Villa Pink House Dalat",
                        "Zen Valley Dalat",
                        "Dalat De Charme Village Resort",
                        "Artitaya Dalat Hotel"
                    },
                    ["V≈©ng T√†u"] = new List<string>
                    {
                        "Imperial Hotel Vung Tau",
                        "Pullman Vung Tau",
                        "Fusion Suites Vung Tau",
                        "Malibu Hotel Vung Tau",
                        "Palace Hotel Vung Tau",
                        "Seaside Resort Vung Tau",
                        "Petro House Hotel Vung Tau",
                        "Green Dragon Water Palace",
                        "Hai Au Boutique Hotel & Spa",
                        "Victory Hotel Vung Tau"
                    },
                    ["Ph√∫ Qu·ªëc"] = new List<string>
                    {
                        "JW Marriott Phu Quoc Emerald Bay Resort & Spa",
                        "InterContinental Phu Quoc Long Beach Resort",
                        "La Veranda Resort Phu Quoc",
                        "Salinda Resort Phu Quoc Island",
                        "Vinpearl Resort & Spa Phu Quoc",
                        "Regent Phu Quoc",
                        "Sol Beach House Phu Quoc",
                        "Chen Sea Resort & Spa Phu Quoc",
                        "Cassia Cottage Resort Phu Quoc",
                        "Famiana Resort & Spa Phu Quoc"
                    },
                    ["ƒê√† N·∫µng"] = new List<string>
                    {
                        "InterContinental Danang Sun Peninsula Resort",
                        "Pullman Danang Beach Resort",
                        "Fusion Maia Da Nang",
                        "Hyatt Regency Danang Resort and Spa",
                        "Premier Village Danang Resort",
                        "Sheraton Grand Danang Resort",
                        "Novotel Danang Premier Han River",
                        "Vinpearl Resort & Golf Nam Hoi An",
                        "TIA Wellness Resort Danang",
                        "Muong Thanh Luxury Danang Hotel"
                    },
                    ["Nha Trang"] = new List<string>
                    {
                        "InterContinental Nha Trang",
                        "Sheraton Nha Trang Hotel & Spa",
                        "Vinpearl Resort Nha Trang",
                        "Fusion Resort Cam Ranh",
                        "Diamond Bay Resort & Spa",
                        "Amiana Resort and Villas Nha Trang",
                        "Liberty Central Nha Trang Hotel",
                        "Sunrise Nha Trang Beach Hotel & Spa",
                        "Best Western Premier Havana Nha Trang",
                        "Muine Bay Resort Nha Trang"
                    }
                };

                int updatedCount = 0;

                // C·∫≠p nh·∫≠t t·ª´ng hotel theo city
                foreach (var hotel in hotels)
                {
                    var city = hotel.City;
                    
                    if (hotelNames.ContainsKey(city))
                    {
                        var cityHotels = hotelNames[city];
                        var random = new Random(hotel.HotelId); // Seed theo ID ƒë·ªÉ consistent
                        
                        // L·∫•y t√™n ng·∫´u nhi√™n t·ª´ danh s√°ch th√†nh ph·ªë ƒë√≥
                        var newName = cityHotels[random.Next(0, cityHotels.Count)];
                        
                        // Ki·ªÉm tra t√™n m·ªõi kh√°c t√™n c≈©
                        if (hotel.Name != newName)
                        {
                            var oldName = hotel.Name;
                            hotel.Name = newName;
                            
                            // C·∫≠p nh·∫≠t description cho ph√π h·ª£p
                            hotel.Description = GenerateRealisticDescription(newName, city);
                            
                            Console.WriteLine($"‚úÖ Updated: '{oldName}' ‚Üí '{newName}' ({city})");
                            updatedCount++;
                        }
                    }
                    else
                    {
                        Console.WriteLine($"‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y th√†nh ph·ªë '{city}' trong danh s√°ch!");
                    }
                }

                // L∆∞u thay ƒë·ªïi
                if (updatedCount > 0)
                {
                    await context.SaveChangesAsync();
                    Console.WriteLine($"üéâ ƒê√£ c·∫≠p nh·∫≠t th√†nh c√¥ng {updatedCount} kh√°ch s·∫°n!");
                }
                else
                {
                    Console.WriteLine("‚ÑπÔ∏è  Kh√¥ng c√≥ thay ƒë·ªïi n√†o c·∫ßn c·∫≠p nh·∫≠t!");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå L·ªói c·∫≠p nh·∫≠t t√™n hotel: {ex.Message}");
            }
        }

        private static string GenerateRealisticDescription(string hotelName, string city)
        {
            var descriptions = new Dictionary<string, string[]>
            {
                ["ƒê√† L·∫°t"] = new[]
                {
                    "Kh√°ch s·∫°n sang tr·ªçng t·ªça l·∫°c t·∫°i trung t√¢m th√†nh ph·ªë ƒê√† L·∫°t, v·ªõi kh√≠ h·∫≠u m√°t m·∫ª quanh nƒÉm v√† phong c·∫£nh th∆° m·ªông.",
                    "Resort cao c·∫•p n·∫±m gi·ªØa n√∫i ƒë·ªìi ƒê√† L·∫°t, mang ƒë·∫øn kh√¥ng gian ngh·ªâ d∆∞·ª°ng y√™n b√¨nh v·ªõi thi·∫øt k·∫ø ch√¢u √Çu ƒë·ªôc ƒë√°o.",
                    "Kh√°ch s·∫°n boutique v·ªõi view h·ªì Xu√¢n H∆∞∆°ng tuy·ªát ƒë·∫πp, phong c√°ch ki·∫øn tr√∫c Ph√°p c·ªï ƒëi·ªÉn gi·ªØa l√≤ng th√†nh ph·ªë ng√†n hoa."
                },
                ["V≈©ng T√†u"] = new[]
                {
                    "Resort bi·ªÉn ƒë·∫≥ng c·∫•p qu·ªëc t·∫ø t·∫°i b√£i Sau V≈©ng T√†u, v·ªõi b√£i c√°t tr·∫Øng m·ªãn v√† d·ªãch v·ª• 5 sao.",
                    "Kh√°ch s·∫°n view bi·ªÉn tuy·ªát ƒë·∫πp, n·∫±m ngay trung t√¢m th√†nh ph·ªë bi·ªÉn V≈©ng T√†u, g·∫ßn c√°c ƒëi·ªÉm du l·ªãch n·ªïi ti·∫øng.",
                    "Resort ngh·ªâ d∆∞·ª°ng sang tr·ªçng b√™n b·ªù bi·ªÉn V≈©ng T√†u, k·∫øt h·ª£p ho√†n h·∫£o gi·ªØa thi√™n nhi√™n v√† ti·ªán nghi hi·ªán ƒë·∫°i."
                },
                ["Ph√∫ Qu·ªëc"] = new[]
                {
                    "Resort ƒë·∫£o nhi·ªát ƒë·ªõi ƒë·∫≥ng c·∫•p th·∫ø gi·ªõi t·∫°i Ph√∫ Qu·ªëc, v·ªõi b√£i bi·ªÉn ri√™ng t∆∞ v√† d·ªãch v·ª• spa cao c·∫•p.",
                    "Kh√°ch s·∫°n luxury tr√™n ƒë·∫£o Ng·ªçc, mang ƒë·∫øn tr·∫£i nghi·ªám ngh·ªâ d∆∞·ª°ng ho√†n h·∫£o v·ªõi thi·∫øt k·∫ø hi·ªán ƒë·∫°i v√† thi√™n nhi√™n hoang s∆°.",
                    "Resort bi·ªÉn 5 sao t·∫°i Ph√∫ Qu·ªëc v·ªõi villa ri√™ng bi·ªát, h∆∞·ªõng ra b√£i Sao tuy·ªát ƒë·∫πp v√† r·ª´ng nguy√™n sinh."
                },
                ["ƒê√† N·∫µng"] = new[]
                {
                    "Resort bi·ªÉn cao c·∫•p t·∫°i ƒê√† N·∫µng v·ªõi thi·∫øt k·∫ø hi·ªán ƒë·∫°i, n·∫±m tr√™n b√£i bi·ªÉn M·ªπ Kh√™ xinh ƒë·∫πp.",
                    "Kh√°ch s·∫°n 5 sao ven s√¥ng H√†n, k·∫øt h·ª£p ho√†n h·∫£o gi·ªØa phong c√°ch Vi·ªát Nam v√† ti√™u chu·∫©n qu·ªëc t·∫ø.",
                    "Resort ngh·ªâ d∆∞·ª°ng sang tr·ªçng t·∫°i th√†nh ph·ªë ƒê√† N·∫µng, g·∫ßn s√¢n bay v√† c√°c ƒëi·ªÉm tham quan n·ªïi ti·∫øng."
                },
                ["Nha Trang"] = new[]
                {
                    "Resort bi·ªÉn ƒë·∫≥ng c·∫•p qu·ªëc t·∫ø t·∫°i v·ªãnh Nha Trang tuy·ªát ƒë·∫πp, v·ªõi b√£i c√°t v√†ng v√† n∆∞·ªõc bi·ªÉn trong xanh.",
                    "Kh√°ch s·∫°n luxury trung t√¢m Nha Trang, view tr·ªçn v·ªãnh bi·ªÉn v√† g·∫ßn c√°c khu vui ch∆°i gi·∫£i tr√≠.",
                    "Resort cao c·∫•p b√™n b·ªù bi·ªÉn Nha Trang, mang ƒë·∫øn kh√¥ng gian ngh·ªâ d∆∞·ª°ng ho√†n h·∫£o cho k·ª≥ ngh·ªâ t·∫°i thi√™n ƒë∆∞·ªùng bi·ªÉn ƒë·∫£o."
                }
            };

            if (descriptions.ContainsKey(city))
            {
                var cityDescriptions = descriptions[city];
                var random = new Random(hotelName.GetHashCode());
                return cityDescriptions[random.Next(0, cityDescriptions.Length)];
            }

            return $"Kh√°ch s·∫°n cao c·∫•p t·∫°i {city} v·ªõi d·ªãch v·ª• chuy√™n nghi·ªáp v√† ti·ªán nghi hi·ªán ƒë·∫°i.";
        }
    }
}